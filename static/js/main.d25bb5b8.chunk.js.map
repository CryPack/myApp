{"version":3,"sources":["panels/Home.js","panels/Help.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","useState","fetchedData","setData","useEffect","a","bridge","send","user","fetch","res","json","data","console","log","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","header","mode","className","stretched","onClick","Help","left","App","activePanel","setActivePanel","setUser","size","popout","setPopout","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d25bb5b8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nimport './Home.css';\n\nconst Home = ({ id, go, fetchedUser}) => {\n\tconst [fetchedData, setData] = useState(null);\n\n    useEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tlet user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconst res = await fetch(`https://crypack.000webhostapp.com/get_user_data.php?id=${(user != null) ? user['id'] : null}`);\n\t\t\tlet data = await res.json();\n\t\t\tsetData(data);\n\t\t\tconsole.log(data);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\t\n\treturn (\n\t<Panel id={id}>\n\t\t<PanelHeader>Главное меню</PanelHeader>\n\t\t<Group header={<Header mode=\"secondary\">Рандомная хуйня, не обращай внимания</Header>}>\n\t\t\t<Cell>\n\t\t\t\tid: {(fetchedData != null) ? fetchedData['id'] : 'жопа'}<br />\n\t\t\t\tnick: {(fetchedData != null) ? fetchedData['nick'] : 'хуй'}<br />\n\t\t\t\tmoney: {(fetchedData != null) ? fetchedData['money'] : '0'}\n\t\t\t</Cell>\n\t\t</Group>\n\n\t\t<Div className='Keyboard'>\n\t\t\t<Div className='Row1'>\n\t\t\t\t<Button stretched className='But1'>работа</Button>\n\t\t\t\t<Button stretched className='But1'>казино</Button>\n\t\t\t\t<Button stretched className='But1'>магазин</Button>\n\t\t\t</Div>\n\t\t\t<Div className='Row2'>\n\t\t\t\t<Button stretched className='But2'>дом</Button>\n\t\t\t\t<Button stretched className='But2'>бизнес</Button>\n\t\t\t\t<Button stretched className='But2'>донат</Button>\n\t\t\t\t<Button stretched className='But2'>карта</Button>\n\t\t\t</Div>\n\t\t\t<Div className='Row3'>\n\t\t\t\t<Button stretched mode='secondary' className='But3'>о</Button>\n\t\t\t\t<Button stretched mode='secondary' className='But3'>топ</Button>\n\t\t\t\t<Button stretched mode='secondary' className='But3' onClick={go} data-to='help'>помощь</Button>\n\t\t\t\t<Button stretched mode='secondary' className='But3'>н</Button>\n\t\t\t</Div>\n\t\t</Div>\n\t</Panel>\n\t);\n};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar, PanelHeaderBack } from '@vkontakte/vkui';\r\n\r\nconst Help = ({id, go}) => {\r\n    const [fetchedData, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n            let user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tconst res = await fetch(`https://crypack.000webhostapp.com/get_user_data.php?id=${(user != null) ? user['id'] : null}`);\r\n\t\t\tlet data = await res.json();\r\n\t\t\tsetData(data);\r\n\t\t\tconsole.log(data);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n    \r\n    return (\r\n    <Panel id={id}>\r\n        <PanelHeader left={<PanelHeaderBack onClick={go} data-to='home'></PanelHeaderBack>}>Помощь</PanelHeader>\r\n        <Div>\r\n                {(fetchedData != null) ? fetchedData['money'] : `saf`}\r\n        </Div>\r\n    </Panel>\r\n    );\r\n};\r\n\r\nexport default Help;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Help from './panels/Help';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [fetchedData, setData] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t<Help id='help' go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}